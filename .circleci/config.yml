version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.20
  aws-ecs: circleci/aws-ecs@1.1.0

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
#      - release-images:
#          context: aws
#          requires:
#            - build-and-test
#          filters:
#            branches:
#              only: main
#      - deploy-to-production:
#          context: aws
#          requires:
#            - build-and-test
#            - release-images
#          filters:
#            branches:
#              only: main

jobs:
  build-and-test:
    working_directory: ~/go/src/github.com/statistico/statistico-football-data
    machine: true
    environment:
      GOPATH: /home/circleci/go
    steps:
      - *attach_workspace
      - checkout
      - run:
          name: Build Release Image
          command: |
            docker network create statistico_internal
            docker-compose -f docker-compose.build.yml up -d --build
      - run:
          name: Test Release Image
          command: |
            docker-compose -f docker-compose.build.yml run test gotestsum -f short-verbose
      - run:
          name: Cache Built Images
          command: |
            docker images
            chmod +x ./.circleci/deploy/docker-save.sh && ./.circleci/deploy/docker-save.sh
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - docker-cache

  release-images:
    executor: aws-cli/default
    steps:
      - checkout
      - *attach_workspace
      - setup_remote_docker
      - aws-cli/setup
      - run:
          name: Push images to ECR
          command: |
            chmod +x ./.circleci/deploy/docker-load.sh && ./.circleci/deploy/docker-load.sh
            chmod +x ./.circleci/deploy/docker-push.sh && ./.circleci/deploy/docker-push.sh

  deploy-to-production:
    docker:
      - image: 'circleci/python:3.7.1'
    steps:
      - aws-cli/setup
      - aws-ecs/update-service:
          family: 'statistico-football-data-grpc'
          cluster-name: 'statistico-production'
          container-image-name-updates: >
            container=grpc,image-and-tag=${AWS_ECR_ACCOUNT_URL}/statistico-football-data:${CIRCLE_SHA1}
      - aws-ecs/update-service:
          family: 'statistico-football-data-background'
          cluster-name: 'statistico-production'
          container-image-name-updates: >
            container=cron,image-and-tag=${AWS_ECR_ACCOUNT_URL}/statistico-football-data:${CIRCLE_SHA1},
            container=migrate,image-and-tag=${AWS_ECR_ACCOUNT_URL}/statistico-football-data:${CIRCLE_SHA1}
